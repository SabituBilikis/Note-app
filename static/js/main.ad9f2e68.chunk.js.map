{"version":3,"sources":["styles/Navbar.module.css","components/StateProvider.jsx","pages/Register.jsx","pages/Login.jsx","components/Note.jsx","components/AddNote.jsx","components/NoteItems.jsx","components/Toggle.jsx","components/TypeNote.jsx","components/Navbar.jsx","App.jsx","index.jsx"],"names":["module","exports","AppContext","createContext","initialState","isLoggedIn","userId","userEmail","posts","StateProvider","children","useState","appData","setAppData","useEffect","fetch","then","res","json","result","console","log","prevValue","Provider","value","state","setState","Register","useForm","register","handleSubmit","useContext","history","useHistory","onSubmit","email","password","confirmPassword","alert","userFound","localStorage","getItem","newUser","Date","now","setItem","JSON","stringify","push","htmlFor","type","name","id","required","className","Login","user","userdata","parse","prevstate","Note","text","date","handleDeleteNote","onClick","AddNote","handleAddNote","noteText","setNotetext","cols","rows","placeholder","onChange","event","target","length","trim","NoteItems","notes","map","note","Toggle","handleToggleDarkMode","previousDarkMode","TypeNote","nanoid","setNotes","search","setSearch","darkMode","setDarkMode","savedNotes","handleSearchNote","filter","toLowerCase","includes","newNote","toLocaleDateString","newNotes","Navbar","styles","navbar","navlink","to","prev","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad9f2e68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__9jHRZ\",\"navlink\":\"Navbar_navlink__3-Ylj\"};","import { createContext, useEffect, useState } from 'react';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst initialState = {\r\n\tisLoggedIn: false,\r\n\tuserId: null,\r\n\tuserEmail: null,\r\n\tposts: [],\r\n};\r\n\r\nexport default function StateProvider({ children }) {\r\n\tconst [appData, setAppData] = useState(initialState);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/posts')\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(result => {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tsetAppData(prevValue => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...prevValue,\r\n\t\t\t\t\t\tposts: result,\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<AppContext.Provider value={{ state: appData, setState: setAppData }}>\r\n\t\t\t{children}\r\n\t\t</AppContext.Provider>\r\n\t);\r\n}\r\n\r\n","import { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { AppContext } from '../components/StateProvider';\r\n// import styles\r\n//styles\r\nimport '../styles/RegLog.css';\r\n\r\nconst Register = () => {\r\n\tconst { register, handleSubmit } = useForm();\r\n\tconst { setState } = useContext(AppContext);\r\n\tconst history = useHistory();\r\n\r\n\tfunction registerUser({ email, password, confirmPassword }) {\r\n\t\tif (!email) {\r\n\t\t\treturn alert(`please provide an email`);\r\n\t\t}\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\treturn alert(`passwords don't match`);\r\n\t\t}\r\n\t\tlet userFound = localStorage.getItem(email);\r\n\t\tconsole.log(userFound);\r\n\t\tif (userFound) {\r\n\t\t\treturn alert('this user has already been registered');\r\n\t\t}\r\n\t\t// create new user object and save it to local storage\r\n\t\tconst newUser = {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t\tuserId: Date.now(),\r\n\t\t};\r\n\t\t// save the users data for accessing later\r\n\t\tlocalStorage.setItem(email, JSON.stringify(newUser));\r\n\r\n\t\talert('user registered');\r\n\t\tsetState(prevValue => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevValue,\r\n\t\t\t\tisLoggedIn: true,\r\n\t\t\t\tuserId: newUser.userId,\r\n\t\t\t\tuserEmail: newUser.email,\r\n\t\t\t};\r\n\t\t});\r\n\t\thistory.push('/home');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(registerUser)}>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Register</h2>\r\n\t\t\t\t<span>Complete to start adding Note</span>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div>\r\n\t\t\t\t<label htmlFor='email'>Email</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tid='email'\r\n\t\t\t\t\trequired\r\n\t\t\t\t\t{...register('email')}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div>\r\n\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tid='password'\r\n\t\t\t\t\trequired\r\n\t\t\t\t\t{...register('password')}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div>\r\n\t\t\t\t<label htmlFor='confirm-password'>\r\n\t\t\t\t\tConfirm Password\r\n\t\t\t\t</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='confirm-password'\r\n\t\t\t\t\tid='confirm-password'\r\n\t\t\t\t\trequired\r\n\t\t\t\t\t{...register('confirmPassword')}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div>\r\n\t\t\t\t<button type='submit' className='btn '>\r\n\t\t\t\t\tRegister\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Register;\r\n","import { useContext } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppContext } from '../components/StateProvider';\r\n//styles\r\nimport '../styles/RegLog.css';\r\n\r\n function Login() {\r\n\tconst { setState } = useContext(AppContext);\r\n\tconst { register, handleSubmit } = useForm();\r\n\tconst history = useHistory();\r\n\r\n\tconst login = ({ email, password }) => {\r\n\t\t// get the users data\r\n\t\tconst user = localStorage.getItem(email);\r\n\r\n\t\tif (!user) {\r\n\t\t\treturn alert('An account for this email was not found');\r\n\t\t}\r\n\r\n\t\tconst userdata = JSON.parse(user);\r\n\t\tconsole.log(userdata);\r\n\r\n\t\tif (password !== userdata.password) {\r\n\t\t\treturn alert('email or password was incorrect');\r\n\t\t}\r\n\r\n\t\talert('login successfull');\r\n\t\tsetState(prevstate => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevstate,\r\n\t\t\t\tisLoggedIn: true,\r\n\t\t\t\tuserId: userdata.userId,\r\n\t\t\t\tuserEmail: userdata.email,\r\n\t\t\t};\r\n\t\t});\r\n\t\thistory.push('/noteitems');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(login)}>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Login</h2>\r\n\t\t\t\t<span>Login to view your Note</span>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div>\r\n\t\t\t\t<label htmlFor='email'>Email</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tid='email'\r\n\t\t\t\t\trequired\r\n\t\t\t\t\t{...register('email')}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div>\r\n\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\tid='password'\r\n\t\t\t\t\trequired\r\n\t\t\t\t\t{...register('password')}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<div>\r\n\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default Login","\r\n//styles\r\nimport \"../styles/Note.css\";\r\n\r\n/* create note which will be render in Noteitem component*/\r\nconst Note = ( {id, text, date, handleDeleteNote}) => {\r\n    return (\r\n        <div className=\"note\">\r\n\r\n            <span>{text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <button className=\"delete\" onClick={() => handleDeleteNote(id)} >Delete</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\nexport default Note;","\r\nimport { useState } from 'react';\r\n//styles\r\nimport \"../styles/AddNote.css\";\r\n const AddNote =({handleAddNote}) =>{\r\n    const [noteText, setNotetext] = useState(\"\");\r\n    const characterLimit = 200;\r\n    //prevent user for typing more than 200 characters\r\n    const handleChange = (event) => {\r\n        if (characterLimit - event.target.value.length >=0){\r\n            setNotetext(event.target.value);\r\n        } \r\n        \r\n    };\r\n    const handleSaveClick = () => {\r\n        //prevent users for saving blank note\r\n        if (noteText.trim().length > 0){\r\n            handleAddNote(noteText);\r\n            setNotetext(\"\");\r\n        }\r\n        };\r\n       \r\n    return (\r\n        <div className=\"note new\">\r\n            <textarea \r\n            name=\"Text\" \r\n            id=\"\" \r\n            cols=\"30\" \r\n            rows=\"10\"\r\n            placeholder=\"Add a new note\"\r\n            value={noteText}\r\n            onChange={handleChange}></textarea>\r\n            \r\n            <div className=\"note-footer\">\r\n                <small>{characterLimit - noteText.length}Remaining</small>\r\n                <button className=\"save\" onClick={handleSaveClick}>Save</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AddNote;","\r\nimport Note from './Note';\r\nimport AddNote from './AddNote';\r\n/* create a functional componet that return notelist using arrow function  */\r\n\r\n//styles \r\nimport '../styles/NoteItems.css';\r\n//passing in props to make the dummy text dynamics \r\nconst NoteItems = ({notes, handleAddNote, handleDeleteNote}) => {\r\n    return (\r\n        <div className=\"note-item\">\r\n            {notes.map((note) => (\r\n                <Note \r\n                id={note.id} \r\n                text = {note.text} \r\n                date={note.date}\r\n                handleDeleteNote={handleDeleteNote}\r\n                />\r\n            ))}\r\n            <AddNote handleAddNote={handleAddNote}/>\r\n        </div>\r\n    );\r\n}\r\nexport default NoteItems;\r\n","import React from 'react';\r\n\r\n//styles\r\nimport '../styles/Toggle.css';\r\nconst Toggle = ({handleToggleDarkMode}) => {\r\n    return (\r\n\r\n        <div className=\"Toggle\">\r\n            <h1>Note</h1>\r\n            <button onClick={() => handleToggleDarkMode((previousDarkMode) => !previousDarkMode)\r\n            }\r\n             className=\"save\">Toggles</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toggle;\r\n\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport NoteItems from './NoteItems';\r\nimport {nanoid} from 'nanoid';\r\nimport Search from './Search';\r\nimport Toggle from './Toggle';\r\n//styles\r\nimport '../styles/TypeNote.css';\r\nconst TypeNote = () => {\r\n\r\n  const [ notes, setNotes ] = useState([\r\n    {\r\n    id: nanoid(),\r\n    text: \"This is my first note!\",\r\n    date: \"15/04/2021\",\r\n    },\r\n    {\r\n      id: nanoid(),\r\n      text: \"This is my first note!\",\r\n      date: \"15/04/2021\",\r\n      },\r\n      {\r\n        id: nanoid(),\r\n        text: \"This is my first note!\",\r\n        date: \"15/04/2021\",\r\n        },\r\n    \r\n]);\r\n//create search function to make it easy for user to search for note\r\nconst [search, setSearch] = useState('');\r\n\r\n//create dark mode \r\nconst [darkMode, setDarkMode] = useState(false);\r\n//saving the note to localstorage\r\nuseEffect(() => {\r\n  const savedNotes = JSON.parse(\r\n    localStorage.getItem('react-notes-app-data')\r\n  );\r\n  if (savedNotes) {\r\n    setNotes(savedNotes);\r\n  }\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  localStorage.setItem(\r\n    'react-notes-app-data',\r\n    JSON.stringify(notes)\r\n  );\r\n}, [notes]);\r\n\r\n//create a function to update the note \r\n          const addNote = (text) => {\r\n            const date = new Date();\r\n            const newNote = {\r\n              id: nanoid(),\r\n              text: text,\r\n              date: date.toLocaleDateString()\r\n            }\r\n            const newNotes = [...notes, newNote];\r\n            setNotes(newNotes);\r\n          };\r\n\r\n          //create a function to delete note\r\n          const deleteNote =(id) => {\r\n            const newNotes = notes.filter((note) => notes.id !== id);\r\n            setNotes(newNotes);\r\n          }\r\n          \r\n  return (\r\n  <div className={`${darkMode && 'dark-mode'}`}>  \r\n    <div className=\"container\">\r\n      <Toggle handleToggleDarkMode={setDarkMode}/>\r\n      <search  handleSearchNote={setSearch}/>\r\n      <NoteItems  \r\n      notes={notes.filter((note) => \r\n        note.text.toLowerCase().includes(search))} \r\n      handleAddNote={addNote}\r\n      handleDeleteNote={deleteNote}\r\n      />\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default TypeNote;\r\n","import { useContext } from 'react';\r\nimport { AppContext } from './StateProvider';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n// import styles\r\nimport styles from '../styles/Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n\tconst { state, setState } = useContext(AppContext);\r\n\r\n\r\n\tconst logout = () => {\r\n\t\tsetState(prev => {\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\tisLoggedIn: false,\r\n\t\t\t\tuserEmail: null,\r\n\t\t\t\tuserId: null,\r\n\t\t\t};\r\n\t\t});\r\n\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<nav className={styles.navbar}>\r\n\t\t\t{!state.isLoggedIn ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link className={styles.navlink} to='/register'>\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link className={styles.navlink} to='/login'>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Link className={styles.navlink} to='/typenote'>\r\n\t\t\t\t\tTypeNote\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<span onClick={logout} className={styles.navlink}>\r\n\t\t\t\t\t\tLogout\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default Navbar;\r\n\r\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Register from './pages/Register';\nimport Login from './pages/Login';\n\nimport TypeNote from './components/TypeNote';\nimport Navbar from './components/Navbar';\nimport StateProvider from './components/StateProvider';\n\n\n//import styles \nimport './index.css';\n\nconst App = () => {\n  return (\n    <StateProvider>\n    <Router>\n        <Navbar />\n\n        <Switch>\n            {/* render Register Component when we hit /register */}\n            <Route exact path='/register'>\n                <Register />\n            </Route>\n\n            {/* render Login Component when user hit /login */}\n            <Route exact path='/login'>\n                <Login />\n            </Route>\n          \n            {/* render Todo Component when user hit create todo */}\n            <Route exact path='/typenote'>\n                <TypeNote />\n            </Route>\n\t\t\t\n        </Switch>\n    </Router>\n</StateProvider>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}